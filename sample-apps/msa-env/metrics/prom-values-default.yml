server:
  service:
    type: ClusterIP
    servicePort: 30080

alertmanager:
  persistentVolume:
    storageClass: "gp2"

pushgateway:
  enabled: false

serverFiles:
  # デフォルト定義を引用: https://github.com/helm/charts/blob/master/stable/prometheus/values.yaml
  prometheus.yml:
    rule_files:
      - /etc/config/rules
      - /etc/config/alerts

    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics

      - job_name: 'kubernetes-nodes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_node

      - job_name: 'prometheus-pushgateway'
        honor_labels: true
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
            action: keep
            regex: pushgateway

      - job_name: 'kubernetes-services'
        metrics_path: /probe
        params:
          module: [http_2xx]
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
            action: keep
            regex: true
          - source_labels: [__address__]
            target_label: __param_target
          - target_label: __address__
            replacement: blackbox
          - source_labels: [__param_target]
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: kubernetes_name

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # ここからアプリの設定(stag)
      - job_name: 'flight-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - flight.stag
      - job_name: 'reserve-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - reserve.stag
      - job_name: 'account-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - account.stag
      - job_name: 'purchase-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - purchase.stag
      - job_name: 'flight-ticket-fare-calculation-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - flight-ticket-fare-calculation.stag
      - job_name: 'reserve-notice-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - reserve-notice.stag
      - job_name: 'purchase-notice-stag'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - purchase-notice.stag
      # ここからアプリの設定(prod)
      - job_name: 'flight-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - flight.prod
      - job_name: 'reserve-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - reserve.prod
      - job_name: 'purchase-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - purchase.prod
      - job_name: 'account-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - account.prod
      - job_name: 'flight-ticket-fare-calculation-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - flight-ticket-fare-calculation.prod
      - job_name: 'reserve-notice-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - reserve-notice.prod
      - job_name: 'purchase-notice-prod'
        metrics_path: /actuator/prometheus
        static_configs:
        - targets:
          - purchase-notice.prod
