server:
  port: 28080

info:
  url:
    # プロジェクト全体のURLルート
    root-path: ${URL_ROOT}

spring:
  application:
    name: purchase
  datasource:
    url: jdbc:postgresql://${DB_HOSTNAME_PURCHASE}/m9amsa
    username: postgres
    password: postgres
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: ConnectionPool
      leakDetectionThreshold: 5000
      connection-test-query: SELECT 1
      minimum-idle: 5
      maximum-pool-size: 10
      auto-commit: false
      idle-timeout: 10000
      max-lifetime: 30000
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: create
  cloud:
    stream:
      bindings:
        purchase_output:
          destination: purchase_topic
          contentType: application/json
      kafka:
        binder:
          brokers:
            - ${KAFKA_BROKER}
    kubernetes:
      ribbon:
        enabled: false
opentracing:
  jaeger:
    service-name: ${JAEGER_SERVICENAME_PURCHASE}
    udp-sender:
      host: ${JAEGER_HOST}
      port: 6831
logging:
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} [%16.16X{traceId}:%16.16X{parentSpanId}:%16.16X{spanId}] %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

# OAuth2 resource server
security: 
  oauth2: 
    resource: 
      id: purchase-resource
      userInfoUri: http://${HOSTNAME_ACCOUNT}/${URL_ROOT}/account/auth/validateUser

management:
  endpoints:
    web:
      exposure:
        include: "*"